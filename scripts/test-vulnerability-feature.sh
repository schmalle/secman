#!/bin/bash
#
# Test script for Vulnerability Management Feature
# Related to: Feature 003-i-want-to (Vulnerability Management System)
#
# This script tests the complete vulnerability management feature:
# 1. Compiles backend
# 2. Compiles frontend
# 3. Runs backend tests
# 4. Verifies test data exists
#

set -e  # Exit on error

echo "========================================="
echo "Vulnerability Management Feature Test"
echo "========================================="
echo ""

# Color codes
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Test counter
TESTS_PASSED=0
TESTS_FAILED=0

function run_test() {
    local test_name=$1
    local test_command=$2

    echo -e "${YELLOW}Testing:${NC} $test_name"

    if eval "$test_command" > /dev/null 2>&1; then
        echo -e "${GREEN}✓ PASS${NC}: $test_name"
        ((TESTS_PASSED++))
        return 0
    else
        echo -e "${RED}✗ FAIL${NC}: $test_name"
        ((TESTS_FAILED++))
        return 1
    fi
}

echo "1. Backend Compilation"
echo "----------------------"
cd /Users/flake/sources/misc/secman/src/backendng
run_test "Kotlin compilation" "./gradlew compileKotlin --no-daemon --quiet"
run_test "Test compilation" "./gradlew compileTestKotlin --no-daemon --quiet"
echo ""

echo "2. Backend Tests"
echo "----------------"
echo -e "${YELLOW}Running contract tests...${NC}"
./gradlew test --tests "com.secman.contract.VulnerabilityImportContractTest" --no-daemon --quiet && \
    echo -e "${GREEN}✓ PASS${NC}: VulnerabilityImportContractTest" || \
    echo -e "${RED}✗ FAIL${NC}: VulnerabilityImportContractTest"

./gradlew test --tests "com.secman.contract.AssetVulnerabilitiesContractTest" --no-daemon --quiet && \
    echo -e "${GREEN}✓ PASS${NC}: AssetVulnerabilitiesContractTest" || \
    echo -e "${RED}✗ FAIL${NC}: AssetVulnerabilitiesContractTest"

echo -e "${YELLOW}Running integration tests...${NC}"
./gradlew test --tests "com.secman.integration.VulnerabilityImportKnownAssetsTest" --no-daemon --quiet && \
    echo -e "${GREEN}✓ PASS${NC}: VulnerabilityImportKnownAssetsTest" || \
    echo -e "${RED}✗ FAIL${NC}: VulnerabilityImportKnownAssetsTest"

./gradlew test --tests "com.secman.integration.VulnerabilityImportNewAssetsTest" --no-daemon --quiet && \
    echo -e "${GREEN}✓ PASS${NC}: VulnerabilityImportNewAssetsTest" || \
    echo -e "${RED}✗ FAIL${NC}: VulnerabilityImportNewAssetsTest"

./gradlew test --tests "com.secman.integration.VulnerabilityImportEmptyFieldsTest" --no-daemon --quiet && \
    echo -e "${GREEN}✓ PASS${NC}: VulnerabilityImportEmptyFieldsTest" || \
    echo -e "${RED}✗ FAIL${NC}: VulnerabilityImportEmptyFieldsTest"

./gradlew test --tests "com.secman.integration.AssetMergeIntegrationTest" --no-daemon --quiet && \
    echo -e "${GREEN}✓ PASS${NC}: AssetMergeIntegrationTest" || \
    echo -e "${RED}✗ FAIL${NC}: AssetMergeIntegrationTest"

./gradlew test --tests "com.secman.integration.VulnerabilityDuplicateTest" --no-daemon --quiet && \
    echo -e "${GREEN}✓ PASS${NC}: VulnerabilityDuplicateTest" || \
    echo -e "${RED}✗ FAIL${NC}: VulnerabilityDuplicateTest"

echo -e "${YELLOW}Running unit tests...${NC}"
./gradlew test --tests "com.secman.unit.VulnerabilityImportServiceTest" --no-daemon --quiet && \
    echo -e "${GREEN}✓ PASS${NC}: VulnerabilityImportServiceTest" || \
    echo -e "${RED}✗ FAIL${NC}: VulnerabilityImportServiceTest"

./gradlew test --tests "com.secman.unit.AssetMergeServiceTest" --no-daemon --quiet && \
    echo -e "${GREEN}✓ PASS${NC}: AssetMergeServiceTest" || \
    echo -e "${RED}✗ FAIL${NC}: AssetMergeServiceTest"

echo ""

echo "3. Frontend Build"
echo "-----------------"
cd /Users/flake/sources/misc/secman/src/frontend
run_test "Frontend TypeScript compilation" "npm run build"
echo ""

echo "4. Test Data Verification"
echo "-------------------------"
run_test "Test Excel file exists" "test -f /Users/flake/sources/misc/secman/testdata/test-vulnerabilities.xlsx"
run_test "Frontend test data exists" "test -f /Users/flake/sources/misc/secman/src/frontend/testdata/test-vulnerabilities.xlsx"
echo ""

echo "5. File Structure Verification"
echo "------------------------------"
cd /Users/flake/sources/misc/secman

# Backend files
run_test "Vulnerability entity exists" "test -f src/backendng/src/main/kotlin/com/secman/domain/Vulnerability.kt"
run_test "VulnerabilityRepository exists" "test -f src/backendng/src/main/kotlin/com/secman/repository/VulnerabilityRepository.kt"
run_test "AssetMergeService exists" "test -f src/backendng/src/main/kotlin/com/secman/service/AssetMergeService.kt"
run_test "VulnerabilityImportService exists" "test -f src/backendng/src/main/kotlin/com/secman/service/VulnerabilityImportService.kt"

# Frontend files
run_test "VulnerabilityImportForm exists" "test -f src/frontend/src/components/VulnerabilityImportForm.tsx"
run_test "VulnerabilityHistory exists" "test -f src/frontend/src/components/VulnerabilityHistory.tsx"
run_test "vulnerabilityService exists" "test -f src/frontend/src/services/vulnerabilityService.ts"

# DTOs
run_test "VulnerabilityImportResponse DTO exists" "test -f src/backendng/src/main/kotlin/com/secman/dto/VulnerabilityImportResponse.kt"
run_test "SkippedRowDetail DTO exists" "test -f src/backendng/src/main/kotlin/com/secman/dto/SkippedRowDetail.kt"

echo ""

echo "========================================="
echo "Test Summary"
echo "========================================="
echo -e "Tests Passed: ${GREEN}${TESTS_PASSED}${NC}"
echo -e "Tests Failed: ${RED}${TESTS_FAILED}${NC}"
echo ""

if [ $TESTS_FAILED -eq 0 ]; then
    echo -e "${GREEN}✓ All tests passed!${NC}"
    echo ""
    echo "Next steps:"
    echo "1. Start the backend: cd src/backendng && ./gradlew run"
    echo "2. Start the frontend: cd src/frontend && npm run dev"
    echo "3. Navigate to http://localhost:4321/import"
    echo "4. Click the 'Vulnerabilities' tab"
    echo "5. Upload testdata/test-vulnerabilities.xlsx"
    echo "6. Verify the import succeeds with correct counts"
    exit 0
else
    echo -e "${RED}✗ Some tests failed!${NC}"
    exit 1
fi
