version: '3.8'

services:
  database:
    build:
      context: .
      dockerfile: docker/database/Dockerfile
    container_name: secman-database-prod
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: secman
      MYSQL_USER: secman
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - database_data:/var/lib/mysql
      - ./docker/database/logs:/var/log/mysql
    networks:
      - secman-network
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "secman", "-p${MYSQL_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    container_name: secman-backend-prod
    environment:
      - DB_USERNAME=secman
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - DB_URL=jdbc:mariadb://database:3306/secman
      - JWT_SECRET=${JWT_SECRET}
      - MICRONAUT_ENVIRONMENTS=prod
    ports:
      - "8080:8080"
    networks:
      - secman-network
    depends_on:
      database:
        condition: service_healthy
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s

  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    container_name: secman-frontend-prod
    environment:
      - NODE_ENV=production
    ports:
      - "4321:4321"
    networks:
      - secman-network
    depends_on:
      backend:
        condition: service_healthy
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4321/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

networks:
  secman-network:
    driver: bridge

volumes:
  database_data: