openapi: 3.0.3
info:
  title: Test Email Accounts API
  description: API endpoints for managing test email accounts
  version: 1.0.0
servers:
  - url: http://localhost:8080/api
    description: Development server

security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    TestEmailAccount:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 100
        emailAddress:
          type: string
          format: email
        provider:
          type: string
          enum: [GMAIL, OUTLOOK, YAHOO, SMTP_CUSTOM, IMAP_CUSTOM]
        status:
          type: string
          enum: [ACTIVE, INACTIVE, FAILED, VERIFICATION_PENDING]
        lastTestResult:
          type: object
          nullable: true
        lastTestedAt:
          type: string
          format: date-time
          nullable: true
        createdAt:
          type: string
          format: date-time

    TestEmailAccountRequest:
      type: object
      required:
        - name
        - emailAddress
        - provider
      properties:
        name:
          type: string
          maxLength: 100
        emailAddress:
          type: string
          format: email
        provider:
          type: string
          enum: [GMAIL, OUTLOOK, YAHOO, SMTP_CUSTOM, IMAP_CUSTOM]
        credentials:
          type: object
          description: Provider-specific authentication credentials
          additionalProperties: true

    TestEmailRequest:
      type: object
      required:
        - subject
        - content
      properties:
        subject:
          type: string
          maxLength: 200
        content:
          type: string
        useHtml:
          type: boolean
          default: false

    TestResult:
      type: object
      properties:
        success:
          type: boolean
        messageId:
          type: string
          nullable: true
        error:
          type: string
          nullable: true
        testType:
          type: string
          enum: [SEND, RECEIVE, CONNECTIVITY]
        timestamp:
          type: string
          format: date-time
        details:
          type: object
          additionalProperties: true

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        timestamp:
          type: string
          format: date-time

paths:
  /test-email-accounts:
    get:
      summary: List test email accounts
      tags: [Test Email Accounts]
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [ACTIVE, INACTIVE, FAILED, VERIFICATION_PENDING]
        - name: provider
          in: query
          schema:
            type: string
            enum: [GMAIL, OUTLOOK, YAHOO, SMTP_CUSTOM, IMAP_CUSTOM]
      responses:
        '200':
          description: List of test email accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestEmailAccount'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      summary: Create test email account
      tags: [Test Email Accounts]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestEmailAccountRequest'
      responses:
        '201':
          description: Test email account created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestEmailAccount'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /test-email-accounts/{id}:
    get:
      summary: Get test email account by ID
      tags: [Test Email Accounts]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Test email account details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestEmailAccount'
        '404':
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      summary: Update test email account
      tags: [Test Email Accounts]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestEmailAccountRequest'
      responses:
        '200':
          description: Account updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestEmailAccount'
        '404':
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Delete test email account
      tags: [Test Email Accounts]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Account deleted
        '404':
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /test-email-accounts/{id}/test:
    post:
      summary: Test email account functionality
      tags: [Test Email Accounts]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestEmailRequest'
      responses:
        '200':
          description: Test completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestResult'
        '404':
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Test failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /test-email-accounts/{id}/verify:
    post:
      summary: Verify test email account credentials
      tags: [Test Email Accounts]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Verification completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestResult'
        '404':
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /test-email-accounts/{id}/history:
    get:
      summary: Get test history for email account
      tags: [Test Email Accounts]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
            maximum: 100
      responses:
        '200':
          description: Test history
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestResult'
        '404':
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'