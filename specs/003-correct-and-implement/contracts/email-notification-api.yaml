openapi: 3.0.3
info:
  title: Email Notification API
  description: API endpoints for email notification functionality
  version: 1.0.0
servers:
  - url: http://localhost:8080/api
    description: Development server

security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    EmailNotificationLog:
      type: object
      properties:
        id:
          type: integer
          format: int64
        riskAssessmentId:
          type: integer
          format: int64
        emailConfigId:
          type: integer
          format: int64
        recipientEmail:
          type: string
          format: email
        subject:
          type: string
          maxLength: 500
        status:
          type: string
          enum: [PENDING, SENT, FAILED, RETRYING, PERMANENTLY_FAILED]
        errorMessage:
          type: string
          nullable: true
        attempts:
          type: integer
          minimum: 0
        sentAt:
          type: string
          format: date-time
          nullable: true
        nextRetryAt:
          type: string
          format: date-time
          nullable: true
        createdAt:
          type: string
          format: date-time

    NotificationConfigRequest:
      type: object
      required:
        - name
        - recipientEmails
      properties:
        name:
          type: string
          maxLength: 100
        recipientEmails:
          type: array
          items:
            type: string
            format: email
          minItems: 1
        conditions:
          type: object
          additionalProperties: true
          nullable: true

    NotificationConfig:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        recipientEmails:
          type: array
          items:
            type: string
            format: email
        conditions:
          type: object
          additionalProperties: true
          nullable: true
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time

    ManualNotificationRequest:
      type: object
      required:
        - riskAssessmentId
        - recipientEmails
        - subject
        - message
      properties:
        riskAssessmentId:
          type: integer
          format: int64
        recipientEmails:
          type: array
          items:
            type: string
            format: email
        subject:
          type: string
          maxLength: 500
        message:
          type: string
        useHtml:
          type: boolean
          default: false

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        timestamp:
          type: string
          format: date-time

paths:
  /notifications/configs:
    get:
      summary: List notification configurations
      tags: [Email Notifications]
      responses:
        '200':
          description: List of notification configurations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationConfig'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      summary: Create notification configuration
      tags: [Email Notifications]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationConfigRequest'
      responses:
        '201':
          description: Notification configuration created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationConfig'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /notifications/configs/{id}:
    get:
      summary: Get notification configuration by ID
      tags: [Email Notifications]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Notification configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationConfig'
        '404':
          description: Configuration not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      summary: Update notification configuration
      tags: [Email Notifications]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationConfigRequest'
      responses:
        '200':
          description: Configuration updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationConfig'
        '404':
          description: Configuration not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Delete notification configuration
      tags: [Email Notifications]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Configuration deleted
        '404':
          description: Configuration not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /notifications/send:
    post:
      summary: Send manual notification for risk assessment
      tags: [Email Notifications]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManualNotificationRequest'
      responses:
        '202':
          description: Notification queued for sending
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  notificationId:
                    type: integer
                    format: int64
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /notifications/logs:
    get:
      summary: Get email notification logs
      tags: [Email Notifications]
      parameters:
        - name: riskAssessmentId
          in: query
          schema:
            type: integer
            format: int64
        - name: status
          in: query
          schema:
            type: string
            enum: [PENDING, SENT, FAILED, RETRYING, PERMANENTLY_FAILED]
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
            maximum: 200
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: Email notification logs
          content:
            application/json:
              schema:
                type: object
                properties:
                  logs:
                    type: array
                    items:
                      $ref: '#/components/schemas/EmailNotificationLog'
                  total:
                    type: integer
                  limit:
                    type: integer
                  offset:
                    type: integer

  /notifications/retry/{id}:
    post:
      summary: Retry failed email notification
      tags: [Email Notifications]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '202':
          description: Retry queued
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Notification log not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Cannot retry notification
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'