openapi: 3.0.3
info:
  title: Vulnerability Statistics API
  description: |
    REST API for vulnerability statistics and analytics ("Lense" feature).
    Provides aggregated statistics for vulnerabilities including most common CVEs,
    severity distributions, asset rankings, and temporal trends.

    **Access Control**: All endpoints require authentication and respect workgroup-based access control.
    - ADMIN users see statistics for all vulnerabilities
    - VULN users see statistics only for vulnerabilities on assets in their assigned workgroups
  version: 1.0.0
  contact:
    name: Secman Team

servers:
  - url: http://localhost:8080
    description: Development server
  - url: https://api.secman.example.com
    description: Production server

security:
  - bearerAuth: []

tags:
  - name: Statistics
    description: Vulnerability statistics and analytics endpoints

paths:
  /api/vulnerability-statistics/most-common:
    get:
      summary: Get most common vulnerabilities
      description: |
        Returns the top 10 most frequently occurring vulnerabilities across all accessible assets,
        ranked by occurrence count. Respects workgroup access control for non-ADMIN users.

        **Use Case**: Identify which CVEs appear most often to prioritize remediation efforts.
      operationId: getMostCommonVulnerabilities
      tags:
        - Statistics
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully retrieved most common vulnerabilities
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MostCommonVulnerability'
              example:
                - vulnerabilityId: "CVE-2023-12345"
                  cvssSeverity: "CRITICAL"
                  occurrenceCount: 47
                  affectedAssetCount: 23
                - vulnerabilityId: "CVE-2023-67890"
                  cvssSeverity: "HIGH"
                  occurrenceCount: 38
                  affectedAssetCount: 19
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/vulnerability-statistics/severity-distribution:
    get:
      summary: Get severity distribution
      description: |
        Returns the distribution of vulnerabilities across severity levels (Critical, High, Medium, Low, Unknown).
        Includes both raw counts and percentages. Respects workgroup access control.

        **Use Case**: Understand overall risk profile and security posture at a glance.
      operationId: getSeverityDistribution
      tags:
        - Statistics
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully retrieved severity distribution
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeverityDistribution'
              example:
                critical: 15
                high: 42
                medium: 128
                low: 67
                unknown: 3
                total: 255
                criticalPercent: 5.88
                highPercent: 16.47
                mediumPercent: 50.20
                lowPercent: 26.27
                unknownPercent: 1.18
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/vulnerability-statistics/top-assets:
    get:
      summary: Get top assets by vulnerability count
      description: |
        Returns the top 10 assets with the highest number of vulnerabilities.
        Includes breakdown by severity level. Respects workgroup access control.

        **Use Case**: Identify which assets have the most security issues and require attention.
      operationId: getTopAssetsByVulnerabilities
      tags:
        - Statistics
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully retrieved top assets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopAssetByVulnerabilities'
              example:
                - assetId: 123
                  assetName: "web-server-prod-01"
                  assetType: "server"
                  assetIp: "10.0.1.45"
                  totalVulnerabilityCount: 32
                  criticalCount: 2
                  highCount: 8
                  mediumCount: 15
                  lowCount: 7
                - assetId: 456
                  assetName: "db-server-prod-02"
                  assetType: "server"
                  assetIp: "10.0.1.67"
                  totalVulnerabilityCount: 28
                  criticalCount: 1
                  highCount: 12
                  mediumCount: 10
                  lowCount: 5
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/vulnerability-statistics/by-asset-type:
    get:
      summary: Get vulnerabilities grouped by asset type
      description: |
        Returns vulnerability statistics grouped by asset type (server, workstation, network_device, etc.).
        Includes total counts, severity breakdown, and average vulnerabilities per asset.
        Respects workgroup access control.

        **Use Case**: Identify which asset types are most vulnerable and may have systemic issues.
      operationId: getVulnerabilitiesByAssetType
      tags:
        - Statistics
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully retrieved vulnerabilities by asset type
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VulnerabilityByAssetType'
              example:
                - assetType: "server"
                  assetCount: 45
                  totalVulnerabilityCount: 892
                  criticalCount: 12
                  highCount: 87
                  mediumCount: 543
                  lowCount: 250
                  averageVulnerabilitiesPerAsset: 19.82
                - assetType: "workstation"
                  assetCount: 120
                  totalVulnerabilityCount: 456
                  criticalCount: 5
                  highCount: 42
                  mediumCount: 289
                  lowCount: 120
                  averageVulnerabilitiesPerAsset: 3.80
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/vulnerability-statistics/temporal-trends:
    get:
      summary: Get temporal trends for vulnerability counts
      description: |
        Returns time-series data showing how vulnerability counts have changed over time.
        Supports 30, 60, or 90 day time ranges. Includes daily breakdown by severity level.
        Respects workgroup access control.

        **Use Case**: Measure effectiveness of remediation efforts and track security posture over time.
      operationId: getTemporalTrends
      tags:
        - Statistics
      security:
        - bearerAuth: []
      parameters:
        - name: days
          in: query
          description: Number of days to include in trend analysis
          required: true
          schema:
            type: integer
            enum: [30, 60, 90]
            default: 30
          example: 30
      responses:
        '200':
          description: Successfully retrieved temporal trends
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemporalTrends'
              example:
                startDate: "2025-09-28"
                endDate: "2025-10-28"
                days: 30
                dataPoints:
                  - date: "2025-09-28"
                    totalCount: 250
                    criticalCount: 8
                    highCount: 42
                    mediumCount: 140
                    lowCount: 60
                  - date: "2025-09-29"
                    totalCount: 248
                    criticalCount: 7
                    highCount: 41
                    mediumCount: 142
                    lowCount: 58
        '400':
          description: Invalid query parameter (days must be 30, 60, or 90)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                timestamp: "2025-10-28T14:32:15Z"
                status: 400
                error: "Bad Request"
                message: "Invalid days parameter. Must be 30, 60, or 90."
                path: "/api/vulnerability-statistics/temporal-trends"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token obtained from /api/auth/login endpoint

  schemas:
    MostCommonVulnerability:
      type: object
      description: A vulnerability ranked by occurrence frequency
      required:
        - vulnerabilityId
        - cvssSeverity
        - occurrenceCount
        - affectedAssetCount
      properties:
        vulnerabilityId:
          type: string
          description: CVE identifier
          maxLength: 255
          example: "CVE-2023-12345"
        cvssSeverity:
          type: string
          description: CVSS severity level
          enum: ["CRITICAL", "HIGH", "MEDIUM", "LOW", "UNKNOWN"]
          example: "CRITICAL"
        occurrenceCount:
          type: integer
          format: int64
          description: Total number of times this vulnerability appears across all accessible assets
          minimum: 1
          example: 47
        affectedAssetCount:
          type: integer
          format: int64
          description: Number of distinct assets affected by this vulnerability
          minimum: 1
          example: 23

    SeverityDistribution:
      type: object
      description: Distribution of vulnerabilities across severity levels with percentages
      required:
        - critical
        - high
        - medium
        - low
        - unknown
        - total
        - criticalPercent
        - highPercent
        - mediumPercent
        - lowPercent
        - unknownPercent
      properties:
        critical:
          type: integer
          format: int64
          description: Count of CRITICAL severity vulnerabilities
          minimum: 0
          example: 15
        high:
          type: integer
          format: int64
          description: Count of HIGH severity vulnerabilities
          minimum: 0
          example: 42
        medium:
          type: integer
          format: int64
          description: Count of MEDIUM severity vulnerabilities
          minimum: 0
          example: 128
        low:
          type: integer
          format: int64
          description: Count of LOW severity vulnerabilities
          minimum: 0
          example: 67
        unknown:
          type: integer
          format: int64
          description: Count of vulnerabilities with null or unknown severity
          minimum: 0
          example: 3
        total:
          type: integer
          format: int64
          description: Total vulnerability count (sum of all severity levels)
          minimum: 0
          example: 255
        criticalPercent:
          type: number
          format: double
          description: Percentage of critical vulnerabilities
          minimum: 0
          maximum: 100
          example: 5.88
        highPercent:
          type: number
          format: double
          description: Percentage of high vulnerabilities
          minimum: 0
          maximum: 100
          example: 16.47
        mediumPercent:
          type: number
          format: double
          description: Percentage of medium vulnerabilities
          minimum: 0
          maximum: 100
          example: 50.20
        lowPercent:
          type: number
          format: double
          description: Percentage of low vulnerabilities
          minimum: 0
          maximum: 100
          example: 26.27
        unknownPercent:
          type: number
          format: double
          description: Percentage of unknown severity vulnerabilities
          minimum: 0
          maximum: 100
          example: 1.18

    TopAssetByVulnerabilities:
      type: object
      description: An asset ranked by its total vulnerability count with severity breakdown
      required:
        - assetId
        - assetName
        - totalVulnerabilityCount
        - criticalCount
        - highCount
        - mediumCount
        - lowCount
      properties:
        assetId:
          type: integer
          format: int64
          description: Unique asset identifier
          minimum: 1
          example: 123
        assetName:
          type: string
          description: Asset name for display
          maxLength: 255
          example: "web-server-prod-01"
        assetType:
          type: string
          description: Asset type (server, workstation, network_device, etc.)
          nullable: true
          example: "server"
        assetIp:
          type: string
          description: Asset IP address
          nullable: true
          pattern: '^(\d{1,3}\.){3}\d{1,3}$|^([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}$'
          example: "10.0.1.45"
        totalVulnerabilityCount:
          type: integer
          format: int64
          description: Total vulnerability count for this asset
          minimum: 1
          example: 32
        criticalCount:
          type: integer
          format: int64
          description: Count of critical vulnerabilities
          minimum: 0
          example: 2
        highCount:
          type: integer
          format: int64
          description: Count of high vulnerabilities
          minimum: 0
          example: 8
        mediumCount:
          type: integer
          format: int64
          description: Count of medium vulnerabilities
          minimum: 0
          example: 15
        lowCount:
          type: integer
          format: int64
          description: Count of low vulnerabilities
          minimum: 0
          example: 7

    VulnerabilityByAssetType:
      type: object
      description: Vulnerability statistics grouped by asset type
      required:
        - assetType
        - assetCount
        - totalVulnerabilityCount
        - criticalCount
        - highCount
        - mediumCount
        - lowCount
        - averageVulnerabilitiesPerAsset
      properties:
        assetType:
          type: string
          description: Asset type (server, workstation, network_device, Unknown)
          example: "server"
        assetCount:
          type: integer
          format: int64
          description: Number of assets of this type
          minimum: 1
          example: 45
        totalVulnerabilityCount:
          type: integer
          format: int64
          description: Total vulnerabilities across all assets of this type
          minimum: 1
          example: 892
        criticalCount:
          type: integer
          format: int64
          description: Count of critical vulnerabilities
          minimum: 0
          example: 12
        highCount:
          type: integer
          format: int64
          description: Count of high vulnerabilities
          minimum: 0
          example: 87
        mediumCount:
          type: integer
          format: int64
          description: Count of medium vulnerabilities
          minimum: 0
          example: 543
        lowCount:
          type: integer
          format: int64
          description: Count of low vulnerabilities
          minimum: 0
          example: 250
        averageVulnerabilitiesPerAsset:
          type: number
          format: double
          description: Average number of vulnerabilities per asset (totalVulnerabilityCount / assetCount)
          minimum: 0
          example: 19.82

    TemporalTrendDataPoint:
      type: object
      description: A single data point in the time-series vulnerability trend
      required:
        - date
        - totalCount
        - criticalCount
        - highCount
        - mediumCount
        - lowCount
      properties:
        date:
          type: string
          format: date
          description: Date of this data point (YYYY-MM-DD format, no time component)
          example: "2025-10-01"
        totalCount:
          type: integer
          format: int64
          description: Total vulnerability count on this date
          minimum: 0
          example: 245
        criticalCount:
          type: integer
          format: int64
          description: Critical vulnerabilities on this date
          minimum: 0
          example: 8
        highCount:
          type: integer
          format: int64
          description: High vulnerabilities on this date
          minimum: 0
          example: 42
        mediumCount:
          type: integer
          format: int64
          description: Medium vulnerabilities on this date
          minimum: 0
          example: 135
        lowCount:
          type: integer
          format: int64
          description: Low vulnerabilities on this date
          minimum: 0
          example: 60

    TemporalTrends:
      type: object
      description: Container for temporal trend data with metadata
      required:
        - startDate
        - endDate
        - days
        - dataPoints
      properties:
        startDate:
          type: string
          format: date
          description: Start date of the time range (inclusive)
          example: "2025-09-28"
        endDate:
          type: string
          format: date
          description: End date of the time range (inclusive)
          example: "2025-10-28"
        days:
          type: integer
          description: Number of days in the time range
          enum: [30, 60, 90]
          example: 30
        dataPoints:
          type: array
          description: Array of daily data points (may have fewer than 'days' entries if no data for some dates)
          items:
            $ref: '#/components/schemas/TemporalTrendDataPoint'
          example:
            - date: "2025-09-28"
              totalCount: 250
              criticalCount: 8
              highCount: 42
              mediumCount: 140
              lowCount: 60
            - date: "2025-09-29"
              totalCount: 248
              criticalCount: 7
              highCount: 41
              mediumCount: 142
              lowCount: 58

    Error:
      type: object
      description: Standard error response format
      required:
        - timestamp
        - status
        - error
        - message
        - path
      properties:
        timestamp:
          type: string
          format: date-time
          description: ISO 8601 timestamp of when the error occurred
          example: "2025-10-28T14:32:15Z"
        status:
          type: integer
          description: HTTP status code
          example: 400
        error:
          type: string
          description: HTTP status text
          example: "Bad Request"
        message:
          type: string
          description: Human-readable error message
          example: "Invalid days parameter. Must be 30, 60, or 90."
        path:
          type: string
          description: Request path that caused the error
          example: "/api/vulnerability-statistics/temporal-trends"

  responses:
    Unauthorized:
      description: Authentication required - JWT token missing or invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            timestamp: "2025-10-28T14:32:15Z"
            status: 401
            error: "Unauthorized"
            message: "Authentication required. Please provide a valid JWT token."
            path: "/api/vulnerability-statistics/most-common"

    Forbidden:
      description: Access forbidden - User does not have required role or permissions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            timestamp: "2025-10-28T14:32:15Z"
            status: 403
            error: "Forbidden"
            message: "Access denied. ADMIN or VULN role required."
            path: "/api/vulnerability-statistics/most-common"

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            timestamp: "2025-10-28T14:32:15Z"
            status: 500
            error: "Internal Server Error"
            message: "An unexpected error occurred while processing your request."
            path: "/api/vulnerability-statistics/most-common"
