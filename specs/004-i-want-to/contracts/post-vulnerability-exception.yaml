openapi: 3.0.3
info:
  title: Create Vulnerability Exception API
  description: Create a new vulnerability exception
  version: 1.0.0
  contact:
    name: secman API

paths:
  /api/vulnerability-exceptions:
    post:
      summary: Create new vulnerability exception
      description: |
        Create a new vulnerability exception (IP-based or product-based).
        Requires ADMIN or VULN role.
      operationId: createVulnerabilityException
      tags:
        - Vulnerability Management
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVulnerabilityExceptionRequest'
      responses:
        '201':
          description: Exception created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VulnerabilityExceptionDto'
        '400':
          description: Bad request - Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                missingField:
                  summary: Missing required field
                  value:
                    message: "Validation failed"
                    details: "Field 'reason' is required"
                invalidType:
                  summary: Invalid exception type
                  value:
                    message: "Validation failed"
                    details: "exceptionType must be IP or PRODUCT"
                invalidIp:
                  summary: Invalid IP format (for IP type)
                  value:
                    message: "Validation failed"
                    details: "targetValue must be a valid IP address for IP exception type"
                pastExpiration:
                  summary: Expiration date in the past
                  value:
                    message: "Validation failed"
                    details: "expirationDate must be in the future"
        '401':
          description: Unauthorized - No valid JWT token provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden - User does not have ADMIN or VULN role
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    CreateVulnerabilityExceptionRequest:
      type: object
      required:
        - exceptionType
        - targetValue
        - reason
      properties:
        exceptionType:
          type: string
          enum: [IP, PRODUCT]
          description: Type of exception
          example: "PRODUCT"
        targetValue:
          type: string
          maxLength: 512
          description: IP address (for IP type) or product name pattern (for PRODUCT type)
          example: "OpenSSH 7.4"
        expirationDate:
          type: string
          format: date-time
          nullable: true
          description: When exception expires (ISO 8601 format). Null or omit for permanent exception.
          example: "2025-12-31T23:59:59"
        reason:
          type: string
          minLength: 1
          maxLength: 1024
          description: Justification for the exception
          example: "Compensating controls in place - WAF blocks this attack vector"

    VulnerabilityExceptionDto:
      type: object
      required:
        - id
        - exceptionType
        - targetValue
        - reason
        - createdBy
        - createdAt
        - isActive
      properties:
        id:
          type: integer
          format: int64
          description: Exception record ID
          example: 7
        exceptionType:
          type: string
          enum: [IP, PRODUCT]
          description: Type of exception (IP-based or product-based)
          example: "PRODUCT"
        targetValue:
          type: string
          maxLength: 512
          description: IP address or product name pattern
          example: "OpenSSH 7.4"
        expirationDate:
          type: string
          format: date-time
          nullable: true
          description: When exception expires (ISO 8601 format). Null means permanent.
          example: "2025-12-31T23:59:59"
        reason:
          type: string
          maxLength: 1024
          description: Justification for the exception
          example: "Compensating controls in place - WAF blocks this attack vector"
        createdBy:
          type: string
          maxLength: 255
          description: Username who created the exception
          example: "john.doe"
        createdAt:
          type: string
          format: date-time
          description: When exception was created (ISO 8601 format)
          example: "2025-10-03T14:20:00"
        isActive:
          type: boolean
          description: Whether exception is currently active (not expired)
          example: true

    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Error message
        details:
          type: string
          nullable: true
          description: Additional error details
