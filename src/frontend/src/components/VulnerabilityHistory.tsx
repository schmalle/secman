/**
 * VulnerabilityHistory component
 *
 * Displays vulnerability history for an asset in a modal.
 * Shows all vulnerabilities found across different scans.
 *
 * Related to: Feature 003-i-want-to (Vulnerability Management System)
 */

import React, { useState, useEffect } from 'react';
import { getAssetVulnerabilities, type Vulnerability } from '../services/vulnerabilityService';

interface VulnerabilityHistoryProps {
    assetId: number;
    assetName: string;
    onClose: () => void;
}

const VulnerabilityHistory: React.FC<VulnerabilityHistoryProps> = ({ assetId, assetName, onClose }) => {
    const [vulnerabilities, setVulnerabilities] = useState<Vulnerability[]>([]);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState<string | null>(null);
    const [page, setPage] = useState(0);
    const [totalPages, setTotalPages] = useState(0);
    const [totalElements, setTotalElements] = useState(0);
    const pageSize = 20;

    useEffect(() => {
        fetchVulnerabilities();
    }, [assetId, page]);

    const fetchVulnerabilities = async () => {
        setLoading(true);
        setError(null);

        try {
            const data = await getAssetVulnerabilities(assetId, page, pageSize);
            setVulnerabilities(data.content);
            setTotalPages(data.totalPages);
            setTotalElements(data.totalElements);
        } catch (err) {
            setError(err instanceof Error ? err.message : 'An error occurred');
        } finally {
            setLoading(false);
        }
    };

    const formatDate = (dateString: string): string => {
        const date = new Date(dateString);
        return date.toLocaleString();
    };

    const getSeverityBadgeClass = (severity: string | null): string => {
        if (!severity) return 'bg-secondary';

        const severityLower = severity.toLowerCase();
        if (severityLower.includes('critical')) {
            return 'bg-danger';
        } else if (severityLower.includes('high')) {
            return 'bg-warning text-dark';
        } else if (severityLower.includes('medium')) {
            return 'bg-info';
        } else if (severityLower.includes('low')) {
            return 'bg-success';
        } else {
            return 'bg-secondary';
        }
    };

    const handlePreviousPage = () => {
        if (page > 0) {
            setPage(page - 1);
        }
    };

    const handleNextPage = () => {
        if (page < totalPages - 1) {
            setPage(page + 1);
        }
    };

    return (
        <div className="modal show d-block" style={{ backgroundColor: 'rgba(0,0,0,0.5)' }}>
            <div className="modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable">
                <div className="modal-content">
                    <div className="modal-header bg-danger text-white">
                        <h5 className="modal-title">
                            <i className="bi bi-shield-exclamation me-2"></i>
                            Vulnerability History - {assetName}
                        </h5>
                        <button type="button" className="btn-close btn-close-white" onClick={onClose}></button>
                    </div>
                    <div className="modal-body">
                        {loading && (
                            <div className="text-center py-5">
                                <div className="spinner-border text-primary" role="status">
                                    <span className="visually-hidden">Loading...</span>
                                </div>
                            </div>
                        )}

                        {error && (
                            <div className="alert alert-danger" role="alert">
                                <i className="bi bi-exclamation-triangle me-2"></i>
                                {error}
                            </div>
                        )}

                        {!loading && !error && (
                            <>
                                {vulnerabilities.length === 0 ? (
                                    <div className="text-center py-5 text-muted">
                                        <i className="bi bi-shield-check" style={{ fontSize: '3rem' }}></i>
                                        <p className="mt-3">No vulnerabilities found for this asset.</p>
                                        <p className="small">This asset appears to be clean!</p>
                                    </div>
                                ) : (
                                    <>
                                        <div className="mb-3">
                                            <p className="text-muted mb-1">
                                                <strong>{totalElements}</strong> vulnerabilit{totalElements === 1 ? 'y' : 'ies'} found
                                            </p>
                                        </div>

                                        <div className="table-responsive">
                                            <table className="table table-striped table-hover">
                                                <thead className="table-dark">
                                                    <tr>
                                                        <th>CVE ID</th>
                                                        <th>CVSS Severity</th>
                                                        <th>Product Versions</th>
                                                        <th>Days Open</th>
                                                        <th>Scan Date</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    {vulnerabilities.map((vuln, index) => (
                                                        <tr key={`${vuln.id}-${index}`}>
                                                            <td>
                                                                {vuln.vulnerabilityId ? (
                                                                    <code>{vuln.vulnerabilityId}</code>
                                                                ) : (
                                                                    <span className="text-muted">-</span>
                                                                )}
                                                            </td>
                                                            <td>
                                                                {vuln.cvssSeverity ? (
                                                                    <span className={`badge ${getSeverityBadgeClass(vuln.cvssSeverity)}`}>
                                                                        {vuln.cvssSeverity}
                                                                    </span>
                                                                ) : (
                                                                    <span className="text-muted">-</span>
                                                                )}
                                                            </td>
                                                            <td>
                                                                {vuln.vulnerableProductVersions ? (
                                                                    <span className="small">{vuln.vulnerableProductVersions}</span>
                                                                ) : (
                                                                    <span className="text-muted">-</span>
                                                                )}
                                                            </td>
                                                            <td>
                                                                {vuln.daysOpen || <span className="text-muted">-</span>}
                                                            </td>
                                                            <td>
                                                                <small className="text-muted">
                                                                    {formatDate(vuln.scanTimestamp)}
                                                                </small>
                                                            </td>
                                                        </tr>
                                                    ))}
                                                </tbody>
                                            </table>
                                        </div>

                                        {/* Pagination */}
                                        {totalPages > 1 && (
                                            <nav aria-label="Vulnerability pagination">
                                                <ul className="pagination justify-content-center">
                                                    <li className={`page-item ${page === 0 ? 'disabled' : ''}`}>
                                                        <button className="page-link" onClick={handlePreviousPage} disabled={page === 0}>
                                                            Previous
                                                        </button>
                                                    </li>
                                                    <li className="page-item disabled">
                                                        <span className="page-link">
                                                            Page {page + 1} of {totalPages}
                                                        </span>
                                                    </li>
                                                    <li className={`page-item ${page >= totalPages - 1 ? 'disabled' : ''}`}>
                                                        <button
                                                            className="page-link"
                                                            onClick={handleNextPage}
                                                            disabled={page >= totalPages - 1}
                                                        >
                                                            Next
                                                        </button>
                                                    </li>
                                                </ul>
                                            </nav>
                                        )}
                                    </>
                                )}
                            </>
                        )}
                    </div>
                    <div className="modal-footer">
                        <button type="button" className="btn btn-secondary" onClick={onClose}>
                            Close
                        </button>
                    </div>
                </div>
            </div>
        </div>
    );
};

export default VulnerabilityHistory;
