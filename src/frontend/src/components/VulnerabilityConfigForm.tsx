/**
 * Vulnerability Configuration Form Component
 *
 * Allows ADMIN users to configure the "Reminder One" threshold for vulnerability overdue tracking.
 * This is a singleton configuration - only one setting exists for the entire organization.
 *
 * Features:
 * - Load current configuration on mount
 * - Update "Reminder One" threshold (1-365 days)
 * - Input validation with feedback
 * - Success/error messaging
 * - Reset functionality
 * - Help text and documentation
 * - Responsive design
 *
 * Access: ADMIN role only (enforced by backend)
 *
 * Related to: Feature 021-vulnerability-overdue-exception-logic
 */

import React, { useState, useEffect } from 'react';
import axios from 'axios';

interface VulnerabilityConfig {
    id: number | null;
    reminderOneDays: number;
    updatedBy: string | null;
    updatedAt: string | null;
}

const VulnerabilityConfigForm: React.FC = () => {
    const [config, setConfig] = useState<VulnerabilityConfig | null>(null);
    const [reminderDays, setReminderDays] = useState<number>(30);
    const [loading, setLoading] = useState(true);
    const [saving, setSaving] = useState(false);
    const [error, setError] = useState<string | null>(null);
    const [success, setSuccess] = useState<string | null>(null);

    useEffect(() => {
        fetchConfig();
        
        // Initialize Bootstrap tooltips
        const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]');
        const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => 
            new (window as any).bootstrap.Tooltip(tooltipTriggerEl)
        );
        
        return () => {
            tooltipList.forEach(tooltip => tooltip.dispose());
        };
    }, []);

    const fetchConfig = async () => {
        try {
            setLoading(true);
            setError(null);
            const response = await axios.get('/api/admin/vulnerability-config');
            setConfig(response.data);
            setReminderDays(response.data.reminderOneDays);
        } catch (err: any) {
            if (err.response?.status === 403) {
                setError('Access denied. ADMIN role required to view this configuration.');
            } else {
                setError('Failed to load configuration. Please try again.');
            }
            console.error('Error loading config:', err);
        } finally {
            setLoading(false);
        }
    };

    const handleSave = async (e: React.FormEvent) => {
        e.preventDefault();
        
        // Client-side validation
        if (reminderDays < 1 || reminderDays > 365) {
            setError('Reminder One must be between 1 and 365 days');
            return;
        }

        try {
            setSaving(true);
            setError(null);
            setSuccess(null);
            
            const response = await axios.put('/api/admin/vulnerability-config', {
                reminderOneDays: reminderDays
            });
            
            setConfig(response.data);
            setSuccess(`Configuration saved successfully. Reminder One set to ${reminderDays} days. This change takes effect immediately for all vulnerability views.`);
            
            // Clear success message after 5 seconds
            setTimeout(() => setSuccess(null), 5000);
        } catch (err: any) {
            if (err.response?.status === 400) {
                setError(err.response.data?.error || 'Invalid configuration value');
            } else if (err.response?.status === 403) {
                setError('Access denied. ADMIN role required to modify this configuration.');
            } else {
                setError('Failed to save configuration. Please try again.');
            }
            console.error('Error saving config:', err);
        } finally {
            setSaving(false);
        }
    };

    const handleReset = () => {
        setReminderDays(config?.reminderOneDays || 30);
        setError(null);
        setSuccess(null);
    };

    const getWarningMessage = () => {
        if (reminderDays < 7) {
            return 'Warning: Setting a very short threshold (< 7 days) may result in many overdue vulnerabilities.';
        } else if (reminderDays > 180) {
            return 'Warning: Setting a long threshold (> 180 days) may reduce urgency of vulnerability remediation.';
        }
        return null;
    };

    if (loading) {
        return (
            <div className="container-fluid p-4">
                <div className="d-flex justify-content-center align-items-center" style={{ minHeight: '400px' }}>
                    <div className="text-center">
                        <div className="spinner-border text-primary" role="status" style={{ width: '3rem', height: '3rem' }}>
                            <span className="visually-hidden">Loading...</span>
                        </div>
                        <p className="mt-3 text-muted">Loading configuration...</p>
                    </div>
                </div>
            </div>
        );
    }

    const warningMessage = getWarningMessage();

    return (
        <div className="container-fluid p-4">
            <div className="row mb-4">
                <div className="col-12">
                    <h2>
                        <i className="bi bi-gear me-2"></i>
                        Vulnerability Settings
                    </h2>
                    <p className="text-muted">
                        Configure global settings for vulnerability overdue tracking and remediation SLAs.
                    </p>
                </div>
            </div>

            <div className="row">
                <div className="col-lg-8 col-xl-6">
                    <div className="card shadow-sm">
                        <div className="card-header bg-primary text-white">
                            <h5 className="mb-0">
                                <i className="bi bi-clock-history me-2"></i>
                                Overdue Threshold Configuration
                            </h5>
                        </div>
                        <div className="card-body">
                            {error && (
                                <div className="alert alert-danger alert-dismissible fade show" role="alert">
                                    <i className="bi bi-exclamation-triangle me-2"></i>
                                    <strong>Error:</strong> {error}
                                    <button type="button" className="btn-close" onClick={() => setError(null)} aria-label="Close"></button>
                                </div>
                            )}
                            
                            {success && (
                                <div className="alert alert-success alert-dismissible fade show" role="alert">
                                    <i className="bi bi-check-circle me-2"></i>
                                    <strong>Success:</strong> {success}
                                    <button type="button" className="btn-close" onClick={() => setSuccess(null)} aria-label="Close"></button>
                                </div>
                            )}

                            <form onSubmit={handleSave}>
                                <div className="mb-4">
                                    <label htmlFor="reminderOneDays" className="form-label fw-bold">
                                        Reminder One (Days)
                                        <i 
                                            className="bi bi-question-circle ms-2 text-muted" 
                                            data-bs-toggle="tooltip" 
                                            data-bs-placement="right"
                                            title="Vulnerabilities older than this many days will be marked as overdue (unless excepted)"
                                            style={{ cursor: 'help' }}
                                        ></i>
                                    </label>
                                    <div className="input-group input-group-lg">
                                        <input
                                            type="number"
                                            className={`form-control ${warningMessage ? 'border-warning' : ''}`}
                                            id="reminderOneDays"
                                            value={reminderDays}
                                            onChange={(e) => setReminderDays(parseInt(e.target.value) || 0)}
                                            min="1"
                                            max="365"
                                            required
                                            disabled={saving}
                                        />
                                        <span className="input-group-text">days</span>
                                    </div>
                                    <div className="form-text">
                                        <i className="bi bi-info-circle me-1"></i>
                                        Vulnerabilities older than this threshold will be marked as <strong className="text-danger">OVERDUE</strong>.
                                        Valid range: <strong>1 to 365 days</strong>. Default: <strong>30 days</strong>.
                                    </div>
                                    {warningMessage && (
                                        <div className="alert alert-warning mt-2 mb-0" role="alert">
                                            <i className="bi bi-exclamation-triangle me-2"></i>
                                            {warningMessage}
                                        </div>
                                    )}
                                </div>

                                {config && config.updatedBy && (
                                    <div className="mb-3 p-3 bg-light rounded">
                                        <small className="text-muted">
                                            <i className="bi bi-clock-history me-2"></i>
                                            Last updated by <strong>{config.updatedBy}</strong> on{' '}
                                            <strong>{new Date(config.updatedAt!).toLocaleString()}</strong>
                                        </small>
                                    </div>
                                )}

                                <div className="d-flex gap-2 flex-wrap">
                                    <button 
                                        type="submit" 
                                        className="btn btn-primary btn-lg"
                                        disabled={saving || reminderDays === config?.reminderOneDays}
                                    >
                                        {saving ? (
                                            <>
                                                <span className="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
                                                Saving...
                                            </>
                                        ) : (
                                            <>
                                                <i className="bi bi-save me-2"></i>
                                                Save Configuration
                                            </>
                                        )}
                                    </button>
                                    <button 
                                        type="button" 
                                        className="btn btn-outline-secondary btn-lg"
                                        onClick={handleReset}
                                        disabled={saving || reminderDays === config?.reminderOneDays}
                                    >
                                        <i className="bi bi-arrow-counterclockwise me-2"></i>
                                        Reset
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>

                    {/* Help Card */}
                    <div className="card mt-4 border-info">
                        <div className="card-header bg-info bg-opacity-10">
                            <h5 className="mb-0">
                                <i className="bi bi-lightbulb me-2"></i>
                                How It Works
                            </h5>
                        </div>
                        <div className="card-body">
                            <ul className="mb-0">
                                <li className="mb-2">
                                    <strong className="text-success">OK (✅)</strong>: Vulnerabilities within the threshold are considered acceptable
                                </li>
                                <li className="mb-2">
                                    <strong className="text-danger">OVERDUE (🔴)</strong>: Vulnerabilities exceeding the threshold need immediate attention
                                </li>
                                <li className="mb-2">
                                    <strong className="text-info">EXCEPTED (🛡️)</strong>: Overdue vulnerabilities with active exceptions are suppressed
                                </li>
                                <li className="mb-2">
                                    Exceptions can be created for specific <strong>assets</strong> or <strong>products</strong>
                                </li>
                                <li className="mb-2">
                                    All exceptions require an <strong>end date</strong> and justification
                                </li>
                                <li>
                                    Changes to this setting take effect <strong>immediately</strong> across all vulnerability views
                                </li>
                            </ul>
                        </div>
                    </div>

                    {/* Recommended Values Card */}
                    <div className="card mt-4 border-secondary">
                        <div className="card-header bg-secondary bg-opacity-10">
                            <h5 className="mb-0">
                                <i className="bi bi-bookmark me-2"></i>
                                Recommended Values
                            </h5>
                        </div>
                        <div className="card-body">
                            <table className="table table-sm table-borderless mb-0">
                                <tbody>
                                    <tr>
                                        <td><strong>Aggressive</strong></td>
                                        <td>7-14 days</td>
                                        <td><span className="badge bg-warning text-dark">High Alert Volume</span></td>
                                    </tr>
                                    <tr>
                                        <td><strong>Standard</strong></td>
                                        <td>30-60 days</td>
                                        <td><span className="badge bg-success">Balanced</span></td>
                                    </tr>
                                    <tr>
                                        <td><strong>Relaxed</strong></td>
                                        <td>90-120 days</td>
                                        <td><span className="badge bg-info text-dark">Longer Response Time</span></td>
                                    </tr>
                                </tbody>
                            </table>
                            <div className="alert alert-light mt-3 mb-0">
                                <small>
                                    <i className="bi bi-info-circle me-1"></i>
                                    Most organizations use <strong>30 days</strong> as a reasonable balance between 
                                    security responsiveness and operational practicality.
                                </small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div className="row mt-4">
                <div className="col-12">
                    <a href="/" className="btn btn-secondary">
                        <i className="bi bi-house me-2"></i>
                        Back to Home
                    </a>
                </div>
            </div>
        </div>
    );
};

export default VulnerabilityConfigForm;
