package com.secman.dto

import io.micronaut.serde.annotation.Serdeable
import jakarta.validation.constraints.Max
import jakarta.validation.constraints.Min
import java.time.LocalDateTime

/**
 * DTO for VulnerabilityConfig entity.
 * Used for API responses to avoid exposing entity internals.
 *
 * Related to: Feature 021-vulnerability-overdue-exception-logic
 */
@Serdeable
data class VulnerabilityConfigDto(
    val id: Long?,
    val reminderOneDays: Int,
    val updatedBy: String?,
    val updatedAt: LocalDateTime?
)

/**
 * Request DTO for updating vulnerability configuration.
 * Validates that reminderOneDays is within acceptable range.
 *
 * Related to: Feature 021-vulnerability-overdue-exception-logic
 */
@Serdeable
data class UpdateVulnerabilityConfigRequest(
    @field:Min(1, message = "Reminder One must be at least 1 day")
    @field:Max(365, message = "Reminder One must not exceed 365 days")
    val reminderOneDays: Int
)

/**
 * Enum representing the overdue status of a vulnerability.
 *
 * Related to: Feature 021-vulnerability-overdue-exception-logic
 */
@Serdeable
enum class OverdueStatus {
    /**
     * Vulnerability is within the acceptable age threshold (not overdue)
     */
    OK,
    
    /**
     * Vulnerability exceeds the age threshold and has no active exception
     */
    OVERDUE,
    
    /**
     * Vulnerability would be overdue but has an active exception
     */
    EXCEPTED
}
