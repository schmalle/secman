package com.secman.repository

import com.secman.domain.Vulnerability
import io.micronaut.data.annotation.Repository
import io.micronaut.data.jpa.repository.JpaRepository
import io.micronaut.data.model.Page
import io.micronaut.data.model.Pageable
import io.micronaut.data.model.Sort
import java.time.LocalDateTime

/**
 * Repository for Vulnerability entity operations
 *
 * Related to: Feature 003-i-want-to (Vulnerability Management System)
 */
@Repository
interface VulnerabilityRepository : JpaRepository<Vulnerability, Long> {

    /**
     * Find all vulnerabilities for a specific asset with pagination support
     *
     * @param assetId The asset ID
     * @param pageable Pagination parameters
     * @return Page of vulnerabilities
     */
    fun findByAssetId(assetId: Long, pageable: Pageable): Page<Vulnerability>

    /**
     * Find vulnerabilities for an asset within a date range
     *
     * @param assetId The asset ID
     * @param startDate Start of scan timestamp range
     * @param endDate End of scan timestamp range
     * @param sort Sort order
     * @return List of vulnerabilities
     */
    fun findByAssetIdAndScanTimestampBetween(
        assetId: Long,
        startDate: LocalDateTime,
        endDate: LocalDateTime,
        sort: Sort
    ): List<Vulnerability>

    /**
     * Count vulnerabilities for a specific asset
     *
     * @param assetId The asset ID
     * @return Count of vulnerabilities
     */
    fun countByAssetId(assetId: Long): Long
}
