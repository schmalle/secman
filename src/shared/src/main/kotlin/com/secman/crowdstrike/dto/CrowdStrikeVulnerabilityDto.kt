package com.secman.crowdstrike.dto

import io.micronaut.serde.annotation.Serdeable
import jakarta.validation.constraints.NotBlank
import jakarta.validation.constraints.NotNull
import java.time.LocalDateTime

/**
 * DTO representing a vulnerability from CrowdStrike Falcon API
 *
 * Related to: Feature 015-we-have-currently (CrowdStrike System Vulnerability Lookup)
 */
@Serdeable
data class CrowdStrikeVulnerabilityDto(
    /**
     * Unique vulnerability ID from CrowdStrike
     */
    @field:NotBlank
    val id: String,

    /**
     * System hostname
     */
    @field:NotBlank
    val hostname: String,

    /**
     * System IP address (nullable)
     */
    val ip: String?,

    /**
     * CVE identifier (nullable)
     */
    val cveId: String?,

    /**
     * CVSS severity level (Critical, High, Medium, Low, Informational)
     */
    @field:NotBlank
    val severity: String,

    /**
     * Numeric CVSS score (0.0-10.0, nullable)
     */
    val cvssScore: Double?,

    /**
     * Vulnerable product and version (nullable)
     */
    val affectedProduct: String?,

    /**
     * Days since detection (calculated, e.g., "15 days")
     */
    val daysOpen: String?,

    /**
     * Detection timestamp (ISO 8601)
     */
    @field:NotNull
    val detectedAt: LocalDateTime,

    /**
     * Vulnerability status (always "open" for this query)
     */
    @field:NotBlank
    val status: String,

    /**
     * Whether this vulnerability matches an active exception
     */
    @field:NotNull
    val hasException: Boolean,

    /**
     * Reason for exception if hasException is true (nullable)
     */
    val exceptionReason: String? = null
)
