#!/bin/bash
#
# Test Vulnerability Upload Endpoint
#

echo "========================================="
echo "Testing Vulnerability Upload"
echo "========================================="
echo ""

# Colors
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m'

BACKEND_URL="http://localhost:8080"
FILE_PATH="/Users/flake/sources/misc/secman/vulns.xlsx"
SCAN_DATE="2025-10-03T15:40:00"

# Step 1: Login to get JWT token
echo -e "${YELLOW}Step 1:${NC} Logging in to get JWT token..."
LOGIN_RESPONSE=$(curl -s -X POST "$BACKEND_URL/api/auth/login" \
    -H "Content-Type: application/json" \
    -d '{"username":"admin","password":"admin"}')

echo "Login response: $LOGIN_RESPONSE"

JWT_TOKEN=$(echo "$LOGIN_RESPONSE" | grep -o '"token":"[^"]*' | cut -d'"' -f4)

if [ -z "$JWT_TOKEN" ]; then
    echo -e "${RED}✗ FAIL${NC}: Could not obtain JWT token"
    echo "Response: $LOGIN_RESPONSE"
    exit 1
fi

echo -e "${GREEN}✓ PASS${NC}: JWT token obtained"
echo "Token (first 20 chars): ${JWT_TOKEN:0:20}..."
echo ""

# Step 2: Upload vulnerability file
echo -e "${YELLOW}Step 2:${NC} Uploading vulnerability file..."
echo "File: $FILE_PATH"
echo "Scan date: $SCAN_DATE"
echo ""

UPLOAD_RESPONSE=$(curl -s -X POST "$BACKEND_URL/api/import/upload-vulnerability-xlsx" \
    -H "Authorization: Bearer $JWT_TOKEN" \
    -F "xlsxFile=@$FILE_PATH" \
    -F "scanDate=$SCAN_DATE" \
    -w "\nHTTP_STATUS:%{http_code}")

# Extract HTTP status
HTTP_STATUS=$(echo "$UPLOAD_RESPONSE" | grep "HTTP_STATUS" | cut -d: -f2)
RESPONSE_BODY=$(echo "$UPLOAD_RESPONSE" | sed '/HTTP_STATUS/d')

echo "HTTP Status: $HTTP_STATUS"
echo "Response body:"
echo "$RESPONSE_BODY" | python3 -m json.tool 2>/dev/null || echo "$RESPONSE_BODY"
echo ""

if [ "$HTTP_STATUS" = "200" ]; then
    echo -e "${GREEN}✓ PASS${NC}: Upload successful!"

    # Parse response
    IMPORTED=$(echo "$RESPONSE_BODY" | grep -o '"imported":[0-9]*' | cut -d: -f2)
    SKIPPED=$(echo "$RESPONSE_BODY" | grep -o '"skipped":[0-9]*' | cut -d: -f2)
    ASSETS_CREATED=$(echo "$RESPONSE_BODY" | grep -o '"assetsCreated":[0-9]*' | cut -d: -f2)

    echo ""
    echo "Summary:"
    echo "  - Imported: $IMPORTED"
    echo "  - Skipped: $SKIPPED"
    echo "  - Assets Created: $ASSETS_CREATED"
else
    echo -e "${RED}✗ FAIL${NC}: Upload failed with status $HTTP_STATUS"
fi

echo ""
echo "========================================="
echo "Test Complete"
echo "========================================="
